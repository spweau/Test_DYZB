
切换分支的第一件事就是 pull

1734 — - - 838G

有空 就给 fmdb 
创建一个 自动的 封装事件

===========

http://test.ugou88.com/ugou-wx/i/order/confirm?godmoids=831-1&instant=1&rt=B3C683F0AA33AEE9A01777C575411A6E


today works： 
上午：
1. 首页破碎过度动画
2. 写法的思想
3. app第一次的轮播图
4. 首页轮播图 ??



— -  -  历史遗留
1.1  完成拆红包  ？？？
2.1  ios 的 自动打包
2.2  重点学习使用 ： instruments工具 （内存泄漏，动画流畅等）
2.3  单元测试

tommor：

1.  看一下 购物车  的逻辑 —> 用来 原生




=====================
movie

迷失Lost
识骨寻踪Bones
英雄Heroes
犯罪现场调查CSI
邪恶力量Supernatural
真探True Detective
汉尼拔Hannibal
疑犯追踪Person of Interest
危机边缘Fringe

=======================




=========

today years:
1.python  (语法pass —> ? )
2.c
3.c++

4.swift （oc 混编 mvvm）

5. runtime  ? ？？  MJExtention ？？？



=======================



——— 打包
1.版本号 更改为 

2.  更新的弹框版本号（提示用户更新）

3.  url（接口）

=====目前 ：  一个接口 ： 提现显示不同的   提现样式


注意版本 更改


today works steps：
上午：
1. 规格选择 单个商品 的选择


 
- - - - - - -  目前欠的h5
1. 活动
2. 品牌专区
3. 购物车的原生
4. 提现的原生


========= runtime
1. 看完 文章
2. 看完 以前的
3. MJExtention


===========  

2022 —> 2nm 的 工艺


======================== 错误码对照表 ==================================
 

2.接口错误码200    成功500    未知错误5001   请求时间错误5002   没有相应权限5003   超出限制5004   未登录5005   已经授权，但是没有关系，不能注册5006   重复操作5007   参数缺失5008   参数错


ssh://oyamei@120.26.226.77:29418/ios/ugou.git
========================= 开发用到的账号与密码 =================================

developer
 fyugostore@163.com
 FYUGOUStoreIOS1688


//内网  rap
http://192.168.1.188:52621/workspace/myWorkspace.do?projectId=1#82
账号：ouyamei密码：godXXX

git地址
http://120.26.226.77:8080/summary/ios%2Fugou.git
账号：oyamei密码：Ugou@IUbnn98

svn
https://120.26.226.77/svn/ugou2/product/APP
账号:ouyamei密码:FYiosQWP345

8.极光推送账号/密码: fyteck/fytech1688  AppKey: 32358f71ba143f0649d9db95

bug:
禅道：http://192.168.1.188:81/zentaopms/www/index.php

融云：
yangwenguang@ugou88.com
ugou_951852admin
融云聊天已经申请上线了：生产环境App Key：3argexb6r3gue开发环境App Key：tdrvipksrtv75

友盟：
fyugostore@163.com       fyugo2088

后台：
http://test.ugou88.com/ugou-admin/jf/platform/index#
勇者无畏  09:16:37
账号：admin密码；UaDminT182a846


========================================================

plist

— - - - - - - -定位
NSLocationAlwaysUsageDescription  定位您的位置，当您购买商品的时候，为您计算运费
— 在使用时就定位
NSLocationWhenInUseUsageDescription 定位您的位置，当您购买商品的时候，为您计算运费



========================================================






==


项目优化？？？

1. runtime 


2. 查看饼状图（ 最好解决 ）
3. 看微信的发红包的界面选项 （最迟 下一周 解决）
4. 首页界面 （考虑 runtime 的 获取实现  —> 先 在 订单详情 那里试验一下）






 
——————





(推送、统计、支付、分享、登录 、IM)



============

134 1857 2534  — - - > 空白的账号123456


===================================技能学习

runtime 三部曲
1.全局性了解
2.每个模块 最好 设计一个 例子
3.简书博客文章

oc 解决 
1. runtime
2. animation
3. avfoundation
—>
研究 swift





2. 饼状图 顺便 quartz2D 与 layer动画 （baser曲线 与 CAShadeLayer）

10月：
1.研究动画
2.ui层级
3.系统优化
4.ios的框架

11月：
1.switf
2.oc switf 混编
3.研究第三方库（MJ AF ADWeb）




================================================= 技能欠缺
（ 双系统 — — > windows & linux ）
windows — — > play game or Audio_Video
linux — —> javase 与 javaee （安卓与服务器）
mac — — > iOS macos watchos 

(oc javase(ändron dev) swift python c++  (javaee) h5(js css .nt) )


-10 分枝开发 ， 热更新
-9 （android & swift）混合开发
-8 模块化开发
-7 单元测试与instrument测试工具
-6 developer 的 详解
-5（cocopods git svn 的熟练使用）
-4 ffmeng 与 vlc
-3 ipv6 和 ipv4
-2 socket 与  http 和 https
-1.加密解密系列
0. 微信发红包界面的demo，借鉴一下


1.研究 runtime
2.研究 字典转模型
3.试着（根据 MJ）写一个字典转模型的demo

4. 需要研究的demo  - - - - - - - 
1. AFN （get 与 post 与 异步）
2. SDW  （get 与 post 与 缓存 与 异步）
3. MJRe （ —> 大概了解就行了 ）
4. MJEx  (runtime — > 时间不定)
5. MBPr（svp） （至少一个月）
6. asy..scoket(https ,http , tcp ,ip,  至少一个月)
7. FMDB (sqlite)
8. Masonry （布局）


=================================================加班



==========================================================================


完成类似于vine的短视频录制功能和画中画(我记得当时vine的版本只到1.X),而且AVFoundation什么的完全没听过.
完成City Guides里的地图动画.(如果有不清楚这个的去appstore下一个国家地理杂志出的City Guides,你可以观摩一下地图的交互设计)
做一个扇形的menu,开启和闭合的动画参考真实世界的扇子打开和收起.
TableView的background用实时动态模糊效果(当时是iOS6.0,完全不知道动态模糊大概是什么样的)
寻找不规则范围里的所有基于GPS的搜索结果.(当时我们有个创意是用户随便用指头上一划,我们提供这个区域内的所有相关搜索结果).
所有的东西在两个月内完成.
结果是,不管完成度如何,我在两个月后东拼西凑都给他弄出来了.
通过找短视频录制,我知道了AVFoundation,视频剪辑.
通过模仿CityGuides的地图,我知道了他们的地图是用一个叫做mapbox的第三方地图做的.因为我用了google地图,高德地图,百度地图和原生地图,都不支持custom tiles.大致了解了LBS的东西.
通过做实时动态模糊,我知道了有个第三方库叫GPUImage,也知道了有个东西叫CADisplayLink.
通过做扇形menu,我学会了CoreAnimation和贝赛尔曲线.
通过搜索在不规则范围内的所有点,我知道了射线法.

试想一下,如果你做的是一个界面粗糙,逻辑简单,交互乏味的app, 那么相应的,从中获取的东西肯定是不多的.所以,当你的技术进步缓慢的时候,很可能就是缺乏挑战的时候.







======================


    
    
    // -----------  change by oym 11 24 2016
    
    
//    NSURL *URL = [[NSURL alloc] initWithString:[NSString stringWithFormat:@"%@?group_name=123JUKADS&rt=%@&tfgid=25",kUpdateGroup,[[NSUserDefaults standardUserDefaults] objectForKey:@"rt"]]];
//    NSMutableURLRequest *request;
//    
//    request = [[NSMutableURLRequest alloc] initWithURL:URL cachePolicy:(NSURLRequestUseProtocolCachePolicy) timeoutInterval:30];
//    request.HTTPMethod = @"POST";
//    
//    NSString *boundary = @"CARVE_UP_BY_OYM";
//    request.allHTTPHeaderFields = @{
//                                    @"Content-Type":[NSString stringWithFormat:@"multipart/form-data; boundary=%@",boundary]
//                                    };
//    NSMutableData *postData = [[NSMutableData alloc]init];//请求体数据
//    
//    // ----------------- 非文件 部分
//    //1.
//    if (self.groupNameTextField.text.length > 0 || self.groupNameTextField.text != nil ) {
//        
//        NSString *group_name = @"group_name";
//        NSString *pairGroup_name = [NSString stringWithFormat:@"--%@\r\nContent-Disposition: form-data; name=\"%@\"\r\n\r\n",boundary,group_name];
//        [postData appendData:[pairGroup_name dataUsingEncoding:NSUTF8StringEncoding]];
//        
//        NSString *valueGroup_name = self.groupNameTextField.text;
//        [postData appendData:[valueGroup_name dataUsingEncoding:NSUTF8StringEncoding]];
//        [postData appendData:[@"\r\n" dataUsingEncoding:NSUTF8StringEncoding]];
//        
//    }
//    
//    //2.
//    NSString *rt = @"rt";
//    NSString *pairRt = [NSString stringWithFormat:@"--%@\r\nContent-Disposition: form-data; name=\"%@\"\r\n\r\n",boundary,rt];
//    [postData appendData:[pairRt dataUsingEncoding:NSUTF8StringEncoding]];
//    
//    NSString *valueRt = [[NSUserDefaults standardUserDefaults] objectForKey:@"rt"];
//    [postData appendData:[valueRt dataUsingEncoding:NSUTF8StringEncoding]];
//    [postData appendData:[@"\r\n" dataUsingEncoding:NSUTF8StringEncoding]];
//    
//    //3.
//    NSString *nameTfgid = @"tfgid";
//    NSString *pairTfgid = [NSString stringWithFormat:@"--%@\r\nContent-Disposition: form-data; name=\"%@\"\r\n\r\n",boundary,nameTfgid];
//    [postData appendData:[pairTfgid dataUsingEncoding:NSUTF8StringEncoding]];
//    
//    NSString *valueTfgid = @"25";//self.tfgid;
//    [postData appendData:[valueTfgid dataUsingEncoding:NSUTF8StringEncoding]];
//    [postData appendData:[@"\r\n" dataUsingEncoding:NSUTF8StringEncoding]];
//    
//    
//    // ----------------- 文件 部分 nsdata
//    //文件部分
//    NSString *fileKey = @"group_img";
//    NSString *filename = @"ticket.png";//[filePath lastPathComponent];
//    
//    NSString *filePair = [NSString stringWithFormat:@"--%@\r\nContent-Disposition: form-data; name=\"%@\"; filename=\"%@\";Content-Type=image/png\r\n\r\n",boundary,fileKey,filename];
//    [postData appendData:[filePair dataUsingEncoding:NSUTF8StringEncoding]];
//
//    //----------image nadata
//    CGSize scaleImageSize = CGSizeMake(210.0, 210.0);
//    UIImage *compressImage = [UIImage imageWithImageSimple:[UIImage imageNamed:@"ticket"] scaledToSize:scaleImageSize];
//    NSData *imageFile = UIImagePNGRepresentation(compressImage);
//    //[postData appendData:[@"测试文件数据" dataUsingEncoding:NSUTF8StringEncoding]];
//    [postData appendData:imageFile]; //加入文件的数据
//    
//    [postData appendData:[[NSString stringWithFormat:@"\r\n--%@--\r\n",boundary] dataUsingEncoding:NSUTF8StringEncoding]];
//    request.HTTPBody = postData;
//    [request setValue:[NSString stringWithFormat:@"%lu",(unsigned long)postData.length] forHTTPHeaderField:@"Content-Length"];
//    
//    _connection = [[NSURLConnection alloc]initWithRequest:request delegate:self];
//    [_connection start];
////
    
   




//// ----------------------  change by oym
//
//#pragma mark - connection delegate
//
//-(void)connection:(NSURLConnection *)connection didReceiveResponse:(NSURLResponse *)response{
//    NSLog(@"reveive Response:\n%@",response);
//}
//
//-(void)connection:(NSURLConnection *)connection didReceiveData:(NSData *)data{
//    if (!_reveivedData) {
//        _reveivedData = [[NSMutableData alloc]init];
//    }
//    
//    [_reveivedData appendData:data];
//}
//
//-(void)connectionDidFinishLoading:(NSURLConnection *)connection{
//    FYLog(@"received Data:\n%@",[[NSString alloc] initWithData:_reveivedData encoding:NSUTF8StringEncoding]);
//}
//
//-(void)connection:(NSURLConnection *)connection didFailWithError:(NSError *)error{
//    NSLog(@"fail connect:\n%@",error);
//}


// =====================================
1、任何原因引起View的尺寸被改变

2、调用ViewController的“viewWillLayoutSubviews”方法

3、未启用Autolayout情况，调用“layoutSubviews”

4、启用Autolayout情况，调用ViewController的"updateViewConstraints"方法。在这个方法里，会调用所有subview的“updateConstraints”方法。

5、当界面被刷新后，调用ViewController的“viewDidLayoutSubviews”


============================================

在首页的 时候 调用  接口

有个参数 是一直使用 还是 只使用一次
保存到偏好设置 里面

1. 从偏好设置里面判断显示类型 0




